{"version":3,"sources":["components/Square.module.css","components/Board.module.css","components/Game.module.css","features/game/gameSlice.js","app/store.js","hello.png","sleeppony.gif","components/Square.js","components/Board.js","ponywave.gif","components/Game.js","index.js"],"names":["module","exports","gameSlice","createSlice","name","initialState","history","squares","Array","fill","stepNumber","xIsNext","reducers","setHistory","state","action","payload","setStepNumber","setXIsNext","actions","configureStore","reducer","game","gameReducer","Square","props","className","styles","square","onClick","value","Board","useSelector","renderSquare","i","grid","calculateWinner","lines","length","a","b","c","Game","status","dispatch","useDispatch","hist","current","winner","moves","map","step","move","desc","jumpTo","every","element","useState","modalIsOpen","setModalIsOpen","open","modal","isOpen","onRequestClose","close","ponywave","src","alt","width","slice","concat","handleClick","greeting","pony","info","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c8e81de7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__2FgcT\",\"kbd-navigation\":\"Square_kbd-navigation__1DXoH\",\"rotation\":\"Square_rotation__3vc1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Board_grid__QQAut\",\"pulse\":\"Board_pulse__1QDca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game_game__2GRVe\",\"info\":\"Game_info__2CFJ1\",\"history\":\"Game_history__2BcZs\",\"greeting\":\"Game_greeting__2rDvH\",\"move\":\"Game_move__nFwB9\",\"pony\":\"Game_pony__zQ8_D\",\"status\":\"Game_status__q1flQ\",\"open\":\"Game_open__1sc0O\",\"pulse\":\"Game_pulse__2ZaJl\",\"close\":\"Game_close__FdB-Z\",\"ponywave\":\"Game_ponywave__8JrmZ\",\"modal\":\"Game_modal__1UBpH\",\"fly\":\"Game_fly__3phQZ\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const gameSlice = createSlice({\r\n    name: 'game',\r\n    initialState: {\r\n      history: [{ squares: Array(9).fill(null) }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    },\r\n    reducers: {\r\n\r\n      setHistory: (state, action) => {\r\n        state.history = action.payload\r\n      },\r\n\r\n      setStepNumber: (state, action) => {\r\n        state.stepNumber = action.payload\r\n      },\r\n\r\n      setXIsNext: (state, action) => {\r\n        state.xIsNext = action.payload\r\n      },\r\n      \r\n    },\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { setHistory, setStepNumber, setXIsNext } = gameSlice.actions\r\n  \r\n  export default gameSlice.reducer\r\n\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport gameReducer from '../features/game/gameSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        game: gameReducer,\r\n    },\r\n})","export default __webpack_public_path__ + \"static/media/hello.6127e7ad.png\";","export default __webpack_public_path__ + \"static/media/sleeppony.233f43d0.gif\";","import React from 'react';\r\nimport '../index.css';\r\nimport styles from './Square.module.css'\r\n\r\nfunction Square(props) { \r\n  return (\r\n    <button className={styles.square} onClick = {props.onClick}> \r\n      {props.value} \r\n    </button>\r\n    // <button className=\"square\" onClick = {props.onClick}> \r\n    //   {props.value} \r\n    // </button>\r\n  );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport '../index.css';\r\nimport { useSelector } from 'react-redux';\r\nimport Square from './Square';\r\nimport styles from './Board.module.css'\r\n\r\nfunction Board(props) {\r\n\r\n    const squares = useSelector((state) => state.game.history[state.game.stepNumber].squares);\r\n  \r\n    const renderSquare = i => {\r\n      return (\r\n        <Square \r\n          value = {squares[i]}\r\n          onClick = {() => props.onClick(i)} \r\n        />\r\n      );\r\n    }\r\n  \r\n      return (\r\n        <div className={styles.grid}>\r\n            {renderSquare(0)}\r\n            {renderSquare(1)}\r\n            {renderSquare(2)}\r\n            {renderSquare(3)}\r\n            {renderSquare(4)}\r\n            {renderSquare(5)}\r\n            {renderSquare(6)}\r\n            {renderSquare(7)}\r\n            {renderSquare(8)}\r\n        </div>\r\n      );\r\n    }\r\n\r\nexport default Board;","export default __webpack_public_path__ + \"static/media/ponywave.6fb5280b.gif\";","import {React, useState} from 'react';\r\nimport '../index.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setHistory, setStepNumber, setXIsNext} from '../features/game/gameSlice';\r\nimport greeting from '../hello.png';\r\nimport pony from '../sleeppony.gif';\r\nimport Board from './Board';\r\nimport styles from './Game.module.css'\r\nimport Modal from 'react-modal';\r\nimport ponywave from '../ponywave.gif'\r\n\r\nfunction Game(props) {\r\n  \r\n  // select states from redux store\r\n  const history = useSelector((state) => state.game.history);\r\n  const stepNumber = useSelector((state) => state.game.stepNumber);\r\n  const xIsNext = useSelector((state) => state.game.xIsNext);\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleClick = i => {\r\n    const hist = history.slice(0, stepNumber + 1); //copy of history up to current step\r\n    const current = hist[hist.length -1]; // current view of grid (current element in the history )\r\n    const squares = current.squares.slice(); // create copy to avoid mutating underlying data directly\r\n    if (calculateWinner(squares) || squares[i]) { // dont allow click when there's a winner or square is not null (i.e. it's filled in)\r\n      return;\r\n    }\r\n    squares[i] = xIsNext ? '🦆': '🐑';\r\n    // dispatch actions/reducer from redux to update states globally\r\n    dispatch(setHistory(hist.concat([{ squares: squares}])));\r\n    dispatch(setStepNumber(hist.length));\r\n    dispatch(setXIsNext(!xIsNext));\r\n    \r\n  }\r\n\r\n  const jumpTo = step => {\r\n    dispatch(setStepNumber(step));\r\n    dispatch(setXIsNext((step % 2) === 0));\r\n  }\r\n\r\n  // used to be in render \r\n  // removed render() so now must define history differently\r\n  const hist = history;\r\n  const current = hist[stepNumber];\r\n  const winner = calculateWinner(current.squares);\r\n\r\n  //const [winner, setWinner] = useState(calculateWinner(current.squares));\r\n\r\n    // iterate through history array and map (element, index)\r\n    const moves = hist.map((step, move) => { \r\n      const desc = move ? // if square has been clicked (i.e. grid added to history, element >=1)\r\n      'Go to move #' + move :\r\n      'Go to game start'; \r\n      return ( // render a button\r\n      // assign key to list of buttons? where key in this case is index (moves are never reordered, deleted or inserted in middle)\r\n        <li className={styles.history} key={move}> \r\n          <button className={styles.history} onClick={() => jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else if (!winner && current.squares.every(element => element !== null)) {\r\n      status = \"It's a tie! \" ;\r\n    } else {\r\n      status = 'Next player: ' + (xIsNext ? '🦆' : '🐑');\r\n    }\r\n\r\n    const [modalIsOpen,setModalIsOpen] = useState(false);\r\n\r\n    const setModalIsOpenToTrue =()=>{\r\n        setModalIsOpen(true)\r\n    }\r\n\r\n    const setModalIsOpenToFalse =()=>{\r\n        setModalIsOpen(false);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>My Little Tic Tac Toe-ny</h1>\r\n\r\n        <button className={styles.open} onClick={setModalIsOpenToTrue}>Click here to say Hi!!</button>\r\n\r\n        <Modal className={styles.modal} isOpen={modalIsOpen} onRequestClose={()=> setModalIsOpen(false)}>\r\n          <button className={styles.close} onClick={setModalIsOpenToFalse}>Close</button>\r\n          <div><img className={styles.ponywave} src={ponywave} alt=\"ponywave\" width = \"900px\"/></div>\r\n        </Modal>\r\n      \r\n\r\n        <div className={styles.game}>\r\n          <div className=\"board\">\r\n            <Board \r\n              //squares ={current.squares} // displays current grid (up to stepNumber which is defined in jumpTo which is based on move (index of history, i.e. what turn the game is on))\r\n              squares = {useSelector((state) => state.game.history[state.game.stepNumber].squares)}\r\n              onClick={(i) => handleClick(i)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div><img className={styles.greeting} src={greeting} alt = \"greeting\" width = \"400px\" /></div>\r\n            <div><img className={styles.pony} src={pony} alt=\"pony\" width = \"900px\"/></div>\r\n          </div>\r\n          <div className={styles.info}>\r\n            {/* <div><img className={styles.greeting} src={greeting} alt = \"greeting\" width = \"300px\" /></div> */}\r\n            <div className={styles.status}>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport Game from './components/Game';\r\nimport './index.css';\r\n\r\n\r\n// ReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Game />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}